# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
#
#
#My adds:
for_window [class="^.*"] border pixel 3
gaps inner 3
gaps outer 3
#
#
exec --no-startup-id setxkbmap pl
exec_always --no-startup-id dcvga
exec --no-startup-id compton --xrender-sync-fence
exec --no-startup-id nm-applet
#
#power managment
set $question "Are you sure?"
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym e exec --no-startup-id dcprompt $question "i3exit logout", mode "default"
    bindsym s exec --no-startup-id dcprompt $question "i3exit suspend", mode "default"
    bindsym h exec --no-startup-id dcprompt $question "i3exit hibernate", mode "default"
    bindsym r exec --no-startup-id dcprompt $question "i3exit reboot", mode "default"
    bindsym Shift+s exec --no-startup-id dcprompt $question "i3exit shutdown", mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Escape mode "$mode_system"
exec --no-startup-id xbacklight -set 30
exec --no-startup-id pactl set-sink-volume 0 30%
exec --no-startup-id xautolock -detectsleep -time 20 -locker "i3exit lock"
exec --no-startup-id xset s 1800 1800 dpms 1800 1800 1800 
exec --no-startup-id udiskie -ans &
exec --no-startup-id dunst &
exec --no-startup-id low_battery.sh &
exec --no-startup-id urxvt -name dropdown -e tmux
for_window [instance="dropdown"] floating enable
for_window [instance="dropdown"] resize set 900 700
for_window [instance="dropdown"] move scratchpad
for_window [instance="dropdown"] border pixel 5
#####################################################################################################
#Keys:
#dropdown keys
bindsym $mod+Shift+u exec urxvt -name dropdown -e tmux
bindsym $mod+u [instance="dropdown"] scratchpad show; [instance="dropdown"] move position center
#browser
bindsym $mod+b exec firefox-esr -P dcmc
bindsym $mod+Shift+b exec firefox-esr -private-window -profile dcmc
#end browsers
bindsym $mod+n exec "nm-connection-editor"
bindsym $mod+Shift+n exec urxvt -e nbwmon
#gaps-settings
smart_gaps on
smart_borders on
bindsym $mod+m gaps inner current set 3; gaps outer current set 3
bindsym $mod+Control+m gaps inner all set 3; gaps outer all set 3
bindsym $mod+Shift+m gaps inner current set 0; gaps outer current set 0
bindsym $mod+Shift+Control+m gaps inner all set 0; gaps outer all set 0
bindsym $mod+comma gaps inner current plus 2
bindsym $mod+Control+comma gaps inner all plus 2
bindsym $mod+Shift+comma gaps inner current minus 2
bindsym $mod+Shift+Control+comma gaps inner all minus 2
bindsym $mod+period gaps outer current plus 2
bindsym $mod+Control+period gaps outer all plus 2
bindsym $mod+Shift+period gaps outer current minus 2
bindsym $mod+Shift+Control+period gaps outer all minus 2
#
#
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
#
#
#screen brightness
bindsym XF86MonBrightnessUp exec xbacklight -inc 5 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 5 # decrease screen brightness
bindsym $mod+XF86MonBrightnessUp exec xbacklight -set 30% # decrease screen brightness
#volume control
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% 
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound
bindsym $mod+XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 30% 
#####################################################################################################
#select display screens
bindsym $mod+F10 exec --no-startup-id "dcdisplay"
#printscreen functions
bindsym --release Print exec --no-startup-id scrot -e 'mv $f ~/img/screenshots/'
bindsym --release Shift+Print exec --no-startup-id scrot -u -e 'mv $f ~/img/screenshots/'
bindsym --release Control+Print exec --no-startup-id scrot -s -e 'mv $f ~/img/screenshots/'
#file managers:
bindsym $mod+Shift+p exec pcmanfm
bindsym $mod+p exec urxvt -e ranger
#editors:
bindsym $mod+o exec urxvt -e vim
#system monitor
bindsym $mod+i exec urxvt -e htop
#calculator
bindsym $mod+y exec gnome-calculator
#bindsym $mod+Shift+Return exec termite -e zsh
bindsym $mod+Shift+a exec pavucontrol
#hiding window into sratchpad workspace
# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus [instance="^(?!dropdown).*$"] scratchpad show;floating disable

#screen and workspace
set $firstscreen eDP1
set $secondscreen VGA1
#
workspace 1 output $firstscreen
workspace 2 output $secondscreen
workspace 3 output $firstscreen
workspace 4 output $secondscreen
workspace 5 output $firstscreen
workspace 6 output $secondscreen
workspace 7 output $firstscreen
workspace 8 output $secondscreen
workspace 9 output $firstscreen
workspace 10 output $secondscreen

# next/previous workspace

bindsym Mod1+Tab workspace next
bindsym Mod1+Shift+Tab workspace prev
bindsym $mod+Tab workspace back_and_forth

#navigate workspaces next / previous
bindsym Mod1+Ctrl+Right workspace next
bindsym Mod1+Ctrl+Left workspace prev

#adding new blank workspace
bindsym $mod+z exec --no-startup-id empty.sh
